#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>            // Adjusting RGB
#include <dt-bindings/zmk/outputs.h>        // Output over usb or bluetooth


/ {
    behaviors {
    //----------------------------------------------------------------------Default Layer Tap Dance
	GRESC: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

	COST: great_british_pound {
            compatible = "zmk,behavior-mod-morph";
            label = "GREAT_BRITISH_POUND";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&GBP>;
            mods = <(MOD_RALT)>;
        };
	};

//______________________________________________________________________________________________________________________________________________________________________________
    macros {
    //----------------------------------------------------------------------
        GBP: zed_em_kay_0 {
            label = "Pound_Sign";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N0>
                , <&macro_tap &kp KP_N1>
                , <&macro_tap &kp KP_N6>
                , <&macro_tap &kp KP_N3>
                , <&macro_release &kp LALT>
                ;
        };
        
        SNIP: zed_em_kay_2 {
            label = "Snip_Shortcut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LGUI>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT &kp LGUI>
                ;
        };
        
        
        
        //-------- Bluetooth ----------------------------------
        BT1: zed_em_kay_BT1 {
            label = "Bluetooth_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp B &kp T &kp N1>
                , <&macro_tap &bt BT_SEL 0>
                ;
        };
        BT2: zed_em_kay_BT2 {
            label = "Bluetooth_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp B &kp T &kp N2>
                , <&macro_tap &bt BT_SEL 1>
                ;
        };
        BT3: zed_em_kay_BT3 {
            label = "Bluetooth_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp B &kp T &kp N3>
                , <&macro_tap &bt BT_SEL 2>
                ;
        };
        BT4: zed_em_kay_BT4 {
            label = "Bluetooth_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp B &kp T &kp N4>
                , <&macro_tap &bt BT_SEL 3>
                ;
        };
        BT5: zed_em_kay_BT5 {
            label = "Bluetooth_5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp B &kp T &kp N5>
                , <&macro_tap &bt BT_SEL 4>
                ;
        };
        BTCLR: zed_em_kay_BTCLR {
            label = "Bluetooth_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp B &kp T &kp C &kp L &kp R>
                , <&macro_tap &bt BT_CLR>
                ;
        };
        
        
        
        //-------- USB / Bluetooth ----------------------------------
        USB: zed_em_kay_USB {
            label = "USB_OUT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp U &kp S &kp B &kp UNDER &kp O &kp U &kp T>
                , <&macro_tap &out OUT_USB>
                ;
        };
        BLE: zed_em_kay_BLE {
            label = "BLE_OUT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp B &kp L &kp E &kp UNDER &kp O &kp U &kp T>
                , <&macro_tap &out OUT_BLE>
                ;
        };
        
        
        
        //-------- VCC on/off ----------------------------------
        VCCON: zed_em_kay_VCCOFF {
            label = "VCC_OFF";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp V &kp C &kp C &kp UNDER &kp O &kp F &kp F>
                , <&macro_tap &ext_power EP_ON>                         // Turns limiter off (No Voltage to VCC pin)
                ;
        };
        VCCOFF: zed_em_kay_VCCON {
            label = "VCC_ON";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp V &kp C &kp C &kp UNDER &kp O &kp N>
                , <&macro_tap &ext_power EP_OFF>                        // Allows power draw (3.2V Voltage to VCC pin)
                ;
        };        

    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// ------------------------------------------------------------------------------------------------------------
				// |  `  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |BKSP | 		|
				// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   \    | DEL		|
				// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |HOME	|
				// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /   |   SHIFT  | UP   | END|
				// |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | 1    |  MENU| LEFT |  DOWN    | RIGHT	|
				// ------------------------------------------------------------------------------------------------------------
			bindings = <

				&GRESC   &kp N1   &kp N2 &kp N3 &COST &kp N5 &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   &kp MINUS &kp EQUAL   &kp BKSP  &SNIP
				&kp TAB    &kp Q    &kp W  &kp E  &kp R &kp T  &kp Y  &kp U  &kp I     &kp O   &kp P    &kp LBKT  &kp RBKT &kp BSLH   &kp DEL
				&kp CLCK    &kp A    &kp S  &kp D  &kp F &kp G  &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT      &kp RET         &kp HOME
				&kp LSHFT    &kp Z    &kp X  &kp C  &kp V &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH     &kp RSHFT      &kp UP   &kp END
				&kp LCTRL &kp LGUI  &kp LALT            &kp SPACE                         &kp RALT  &mo 1 &kp K_APP &kp LEFT &kp DOWN &kp RIGHT
			>;
			sensor-bindings = <&inc_dec_kp UP DOWN>;
		};
		raise {
			bindings = <
				&trans      &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10  &kp F11 &kp F12 &trans &kp C_MUTE
				&kp INS       &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans   &GBP     &kp PSCRN
				&kp KP_NLCK    &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans  &trans    &trans     &kp PG_UP
				&trans          &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans     &trans    &trans &kp PG_DN
				&trans       &trans  &trans              &trans                         &trans &trans &mo 2  &trans &trans &trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		config {
			bindings = <
				&BTCLR &BT1   &BT2   &BT3   &BT4   &BT5   &trans &trans &trans &trans &trans &trans &trans   &reset   &bootloader
				&BLE     &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans   &trans &VCCON
				&USB      &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans  &trans    &trans     &VCCOFF
				&trans     &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans     &trans    &trans &rgb_ug RGB_OFF
				&trans  &trans  &trans              &trans                         &trans &trans &trans &trans &trans &trans
			>;
			//sensor-bindings = <&inc_dec_kp trans trans>;
		};
		temp {
			bindings = <
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans   &trans   &trans
				&trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans   &trans &trans
				&trans    &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans  &trans    &trans     &trans
				&trans     &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans     &trans    &trans &trans
				&trans  &trans  &trans              &trans                         &trans &trans &trans &trans &trans &trans
			>;
			//sensor-bindings = <&inc_dec_kp trans trans>;
		};
	};
};
